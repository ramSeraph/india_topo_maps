name: SOI Weekly 50k pull run

concurrency: 
  group: ${{ github.workflow }}
  cancel-in-progress: true

on: 
  schedule:
    - cron: '0 0 * * 6'
  workflow_dispatch:


jobs:
  Run-SOI-Extraction:
    timeout-minutes: 600
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v4.1.7

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Restore tesseract models from cache
        uses: actions/cache/restore@v4
        with:
          path: '50k/osm/data/captcha/models/'
          key:  'SOI-tesseract-models-v2'
        id: models-cache

      - name: Install packages
        run: |
          sudo apt-get update
          sudo apt-get install -y tesseract-ocr

      - name: Download tesseract models from github releases
        if: ${{ steps.models-cache.outputs.cache-hit != 'true' }}
        run: |
          cd 50k/osm
          mkdir -p data/captcha/models/
          uvx --from git+https://github.com/ramSeraph/soi_common download-captcha-models data/captcha/models/

      - name: Save tesseract models to cache
        if: ${{ steps.models-cache.outputs.cache-hit != 'true' }}
        uses: actions/cache/save@v4
        with:
          path: '50k/osm/data/captcha/models/'
          key:  'SOI-tesseract-models-v2'

      - name: Restore ancillary files from cache
        uses: actions/cache/restore@v4
        with:
          path: |
            50k/osm/data/index_50k.geojson
          key: 'SOI-scrape-basefiles-v1'
        id: base-files-cache
            
      - name: Download Ancillary data
        if: ${{ steps.base-files-cache.outputs.cache-hit != 'true' }}
        run: |
          cd 50k/osm
          mkdir -p data/raw
          [[ -f data/index_50k.geojson ]] || wget -P data https://github.com/ramSeraph/india_topo_maps/releases/download/soi-ancillary/index_50k.geojson

      - name: Save ancillary files to cache
        if: ${{ steps.base-files-cache.outputs.cache-hit != 'true' }}
        uses: actions/cache/save@v4
        with:
          path: |
            50k/osm/data/index_50k.geojson
          key: 'SOI-scrape-basefiles-v1'

      - name: Get current date
        run: echo "date=$(date +'%d%b%Y')" >> $GITHUB_OUTPUT
        id: date

      - name: Restore prev login workspace
        uses: actions/cache/restore@v4
        with:
          path: |
            50k/osm/data/cookies/
            50k/osm/data/tried_users.txt
          key:  SOI-data-ua-login-v3-${{ steps.date.outputs.date }}-${{ github.run_number }}-${{ github.run_attempt }}
          restore-keys: |
            SOI-data-ua-login-v3-${{ steps.date.outputs.date }}-${{ github.run_number }}-
            SOI-data-ua-login-v3-${{ steps.date.outputs.date }}-

      - name: Restore prev data workspace
        uses: actions/cache/restore@v4
        with:
          path: |
            50k/osm/data/raw/*.pdf
            50k/osm/data/raw/*.unavailable
          key:  SOI-data-ua-raw-v3-${{ github.run_number }}-${{ github.run_attempt }}
          restore-keys: |
            SOI-data-ua-raw-v3-${{ github.run_number }}-
            SOI-data-ua-raw-v3-

      # scrape things
      - name: Download SOI data
        run: |
          cd 50k/osm
          mkdir -p data/raw

          echo "${{ secrets.SOI_USERS }}" | base64 -d > data/users.json

          gh release download 50k-osm-orig -p listing_files.csv
          tail -n +2 listing_files.csv | cut -d"," -f1 > data/files_done.txt
          rm listing_files.csv

          proxy_url="http://${{ secrets.PROXY_AUTH }}@${{ secrets.PROXY_IP_ADDRESS }}:8080"
          PROXY_URL="$proxy_url" PB_TOKEN="${{ secrets.PB_TOKEN }}" uv run scrape_unavailable.py -p -r 25
        timeout-minutes: 180

      - name: Process duplicates 
        run: |
          cd 50k/osm
          gh release download soi-ancillary -p combined_files_50k.json
          uv run process_duplictes.py
          gh release upload soi-ancillary combined_files_50k.json --clobber

      - name: Upload raw files to github releases
        run: |
          cd 50k/osm
          ls data/raw/*.pdf > downloaded.txt || touch downloaded.txt
          cat downloaded.txt
          uvx --from gh-release-tools upload-to-release -r '50k-osm-orig' -d 'data/raw' -e '.pdf' || true
          uvx --from gh-release-tools generate-lists -r '50k-osm-orig' -e '.pdf'
          rm -rf data/raw/*.pdf || true
          rm -rf data/raw/*.unavailable || true
          rm -rf data/cookies || true
          rm -rf data/tried_users.txt || true
          rm downloaded.txt

      - name: Save prev data workspace
        if: always()
        uses: actions/cache/save@v4
        with:
          path: |
            50k/osm/data/raw/*.pdf
            50k/osm/data/raw/*.unavailable
          key:  SOI-data-ua-raw-v3-${{ github.run_number }}-${{ github.run_attempt }}

      - name: Save prev login workspace
        if: always()
        uses: actions/cache/save@v4
        with:
          path: |
            50k/osm/data/cookies/
            50k/osm/data/tried_users.txt
          key:  SOI-data-ua-login-v3-${{ steps.date.outputs.date }}-${{ github.run_number }}-${{ github.run_attempt }}


  SOI-Extraction-Failure-Notify:
    needs: [Run-SOI-Extraction]
    if: always() && needs.Run-SOI-Extraction.result == 'failure'
    uses: ./.github/workflows/common-pb-alert.yml
    secrets: inherit
    with:
      title: "SOI Extraction Run Failed"
      which-run: "self"

  #BuildDocs:
  #  needs: [Run-SOI-Extraction]
  #  uses: ./.github/workflows/docs.yml
  #  secrets: inherit


